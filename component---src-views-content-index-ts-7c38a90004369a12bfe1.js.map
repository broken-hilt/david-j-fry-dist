{"version":3,"sources":["webpack:///./src/components/paypal/paypal.styled.tsx","webpack:///./src/components/paypal/paypal.component.tsx","webpack:///./src/components/paypal/index.ts","webpack:///./src/views/content/content.styled.tsx","webpack:///./src/views/content/content.view.tsx","webpack:///./src/views/content/index.ts","webpack:///./src/components/image/image.styled.tsx","webpack:///./src/components/image/image.component.tsx","webpack:///./src/components/image/index.ts"],"names":["PaypalStyled","styled","div","validateProps","css","mq","medium","Paypal","props","embedCode","dangerouslySetInnerHTML","__html","ContentStyled","theme","title","typeStyles","h1","spacer","Content","pageContext","content","image","paypalEmbedCode","narrow","className","html","ImageStyled","picture","Image","ImageSchema","contentUrl","url_webp","description","altText","name","location","contentLocation","schema","type","srcSet","url_jpg","src","alt","width","height"],"mappings":"0JA+CeA,EA3CMC,IAAOC,IAAV,iFAAGD,CAAH,SAGd,WAKA,OAFAE,YAAc,eAAD,iBAFC,KAIPC,YAAP,yQAmBaC,IAAGC,WCtBLC,EALA,SAACC,GACd,OAAKA,EAAMC,UACJ,kBAAC,EAAD,CAAcC,wBAAyB,CAAEC,OAAQH,EAAMC,aADjC,MCJhBF,O,sJCgCAK,EA5BOX,IAAOC,IAAV,mFAAGD,CAAH,SAGf,YAAe,MAAZY,EAAY,EAAZA,MACGL,EAAQ,CACZM,MAAOD,SAAF,UAAEA,EAAOE,kBAAT,aAAE,EAAmBC,IAK5B,OAFAb,YAAc,gBAAD,iBAAuBK,IAE7BJ,YAAP,4CACIa,YAAO,QAAS,sBAGdT,EAAMM,MAING,YAAO,UAIPA,YAAO,cCAFC,EAnBC,SAACV,GAAiD,MACbA,EAAMW,YAAjDC,EADwD,EACxDA,QAASC,EAD+C,EAC/CA,MAAOC,EADwC,EACxCA,gBAAiBR,EADuB,EACvBA,MAEzC,OACE,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAWS,QAAM,GACf,wBAAIC,UAAU,SAASV,GACtBO,GACC,yBAAKG,UAAU,SACb,kBAAC,IAAUH,IAGf,kBAAC,IAAD,CAAQG,UAAU,UAAUC,KAAML,IAClC,kBAAC,IAAD,CAAQX,UAAWa,OCpBZJ,a,+FCeAQ,EAZKzB,IAAO0B,QAAV,+EAAG1B,CAAH,SAGb,WAKA,OAFAE,YAAc,cAAD,iBAFC,KAIPC,YAAP,SCuBWwB,EA3BD,SAACpB,GACb,IAAMqB,EAA2C,CAC/C,QAAS,cACTC,WAAYtB,EAAMuB,SAClBC,YAAaxB,EAAMyB,QACnBC,KAAM1B,EAAMM,OAASN,EAAMyB,SAK7B,OAFIzB,EAAM2B,WAAUN,EAAYO,gBAAkB5B,EAAM2B,UAGtD,oCACE,kBAAC,IAAD,CAAWE,OAAQR,IACnB,kBAAC,EAAD,KACE,4BAAQS,KAAK,aAAaC,OAAQ/B,EAAMuB,WACxC,4BAAQO,KAAK,aAAaC,OAAQ/B,EAAMgC,UACxC,yBACEC,IAAKjC,EAAMgC,QACXE,IAAKlC,EAAMyB,QACXU,MAAOnC,EAAMmC,MACbC,OAAQpC,EAAMoC,YC3BThB","file":"component---src-views-content-index-ts-7c38a90004369a12bfe1.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst PaypalStyled = styled.div<{\n  theme?: object;\n}>`\n  ${() => {\n    const props = {};\n\n    validateProps('PaypalStyled', { ...props });\n\n    return css`\n      border-top: 1px solid #ddd;\n      margin-top: 2.4rem;\n      padding-top: 1.6rem;\n\n      table {\n        width: 100%;\n\n        tr:first-child {\n          display: none;\n        }\n      }\n\n      select {\n        width: 100%;\n        height: 4rem;\n        border: 1px solid #ddd;\n        max-width: 45rem;\n\n        @media ${mq.medium} {\n          max-width: 100%;\n        }\n      }\n\n      input[type='image'] {\n        margin-top: 1.6rem;\n      }\n\n      img {\n        width: 1px;\n      }\n    `;\n  }}\n`;\n\nexport default PaypalStyled;\n","import React from 'react';\n\nimport PaypalStyled from './paypal.styled';\n\nconst Paypal = (props: { embedCode?: string }) => {\n  if (!props.embedCode) return null;\n  return <PaypalStyled dangerouslySetInnerHTML={{ __html: props.embedCode }} />;\n};\n\nexport default Paypal;\n","import Paypal from './paypal.component';\nexport default Paypal;\n","import styled, { css } from 'styled-components';\nimport { spacer } from '~/theme/patterns';\n// import { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst ContentStyled = styled.div<{\n  theme?: object;\n}>`\n  ${({ theme }) => {\n    const props = {\n      title: theme?.typeStyles?.h1,\n    };\n\n    validateProps('ContentStyled', { ...props });\n\n    return css`\n      ${spacer('large', 'padding-top-bottom')}\n\n      .title {\n        ${props.title}\n      }\n\n      .image {\n        ${spacer('medium')}\n      }\n\n      .content {\n        ${spacer('medium')}\n      }\n    `;\n  }}\n`;\n\nexport default ContentStyled;\n","import React from 'react';\nimport Image from '~/components/image';\nimport { Container } from '~/components/layout';\nimport Markup from '~/components/markup';\nimport Paypal from '~/components/paypal';\nimport { ContentTypes } from '~/schema/types';\nimport ContentStyled from './content.styled';\n\nconst Content = (props: { pageContext: ContentTypes.Content }) => {\n  const { content, image, paypalEmbedCode, title } = props.pageContext;\n\n  return (\n    <ContentStyled>\n      <Container narrow>\n        <h1 className=\"title\">{title}</h1>\n        {image && (\n          <div className=\"image\">\n            <Image {...image} />\n          </div>\n        )}\n        <Markup className=\"content\" html={content} />\n        <Paypal embedCode={paypalEmbedCode} />\n      </Container>\n    </ContentStyled>\n  );\n};\n\nexport default Content;\n","import Content from './content.view';\nexport default Content;\n","import styled, { css } from 'styled-components';\n// import { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst ImageStyled = styled.picture<{\n  theme?: object;\n}>`\n  ${() => {\n    const props = {};\n\n    validateProps('ImageStyled', { ...props });\n\n    return css``;\n  }}\n`;\n\nexport default ImageStyled;\n","import React from 'react';\n\nimport { ContentTypes } from '~/schema/types';\nimport SchemaOrg from '../schemaOrg';\nimport { SchemaOrgTypes } from '../schemaOrg/schemaOrg.types';\n\nimport ImageStyled from './image.styled';\n\nconst Image = (props: ContentTypes.Image) => {\n  const ImageSchema: SchemaOrgTypes.Schema_Image = {\n    '@type': 'ImageObject',\n    contentUrl: props.url_webp,\n    description: props.altText,\n    name: props.title || props.altText,\n  };\n\n  if (props.location) ImageSchema.contentLocation = props.location;\n\n  return (\n    <>\n      <SchemaOrg schema={ImageSchema} />\n      <ImageStyled>\n        <source type=\"image/webp\" srcSet={props.url_webp} />\n        <source type=\"image/jpeg\" srcSet={props.url_jpg} />\n        <img\n          src={props.url_jpg}\n          alt={props.altText}\n          width={props.width}\n          height={props.height}\n        />\n      </ImageStyled>\n    </>\n  );\n};\n\nexport default Image;\n","import Image from './image.component';\nexport default Image;\n"],"sourceRoot":""}