{"version":3,"sources":["webpack:///./src/components/painting/painting.styled.tsx","webpack:///./src/components/painting/painting.component.tsx","webpack:///./src/components/painting/index.ts","webpack:///./src/components/pageHeader/pageHeader.styled.tsx","webpack:///./src/components/pageHeader/index.ts","webpack:///./src/components/pageHeader/pageHeader.component.tsx","webpack:///./src/views/gallery/gallery.styled.tsx","webpack:///./src/views/gallery/index.ts","webpack:///./src/views/gallery/gallery.view.tsx","webpack:///./src/components/image/image.styled.tsx","webpack:///./src/components/image/image.component.tsx","webpack:///./src/components/image/index.ts","webpack:///./src/components/markup/markup.styled.tsx","webpack:///./src/components/markup/markup.component.tsx","webpack:///./src/components/markup/index.tsx"],"names":["PaintingStyled","styled","Link","validateProps","css","withPrefix","Painting","props","image","to","url","className","title","PageHeaderStyled","div","theme","typeStyles","h1","spacer","PageHeader","narrow","content","html","GalleryStyled","Gallery","pageContext","paintings","description","size","columns","xsmall","mlarge","gutter","base","map","painting","key","id","ImageStyled","picture","Image","type","srcSet","url_webp","url_jpg","src","alt","altText","width","height","MarkupStyled","h1Styles","h2Styles","h2","h3Styles","h3","h4Styles","h4","h5Styles","h5","h6Styles","h6","linkColor","color","link","linkHoverColor","hover","Markup","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-views-gallery-index-ts-a0ef8ac0704912fadb10.js","sourcesContent":["import { Link, withPrefix } from 'gatsby';\r\nimport styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst PaintingStyled = styled(Link)`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('PaintingStyled', { ...props });\r\n\r\n    return css`\r\n      display: block;\r\n      padding: 1.6rem 1.6rem 3.2rem;\r\n      background: #fff;\r\n      text-decoration: none;\r\n      box-shadow: 0 0.4rem 4rem rgb(0 0 0 / 20%);\r\n      border-radius: 0.8rem;\r\n      text-align: right;\r\n      color: #222;\r\n      height: 100%;\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n\r\n      .image-wrap {\r\n        position: relative;\r\n        font-size: 0;\r\n        line-height: 0;\r\n        overflow: hidden;\r\n\r\n        &::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          right: 0;\r\n          background: rgba(0, 0, 0, 0.15);\r\n          opacity: 0;\r\n          z-index: 2;\r\n          transition: all 0.5s ease-in-out;\r\n        }\r\n\r\n        &::after {\r\n          content: '';\r\n          position: absolute;\r\n          top: 50%;\r\n          left: 50%;\r\n          width: 40px;\r\n          height: 40px;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          background-image: url(${withPrefix('/images/visibility.svg')});\r\n          background-size: 32px 32px;\r\n          background-position: center center;\r\n          background-repeat: no-repeat;\r\n          opacity: 0;\r\n          z-index: 3;\r\n          transition: all 0.5s ease-in-out;\r\n          transform: translate(-50%, -50%) scale(0.9);\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n\r\n      img {\r\n        transition: all 0.5s ease-in-out;\r\n        transform: scale(1);\r\n      }\r\n\r\n      &:hover {\r\n        box-shadow: 0 0.4rem 4rem rgb(0 0 0 / 35%);\r\n\r\n        .image-wrap {\r\n          &::before {\r\n            opacity: 1;\r\n          }\r\n          &::after {\r\n            opacity: 1;\r\n            transform: translate(-50%, -50%) scale(1);\r\n          }\r\n        }\r\n        // img {\r\n        //   transform: scale(1.025);\r\n        // }\r\n      }\r\n\r\n      .title {\r\n        font-weight: bold;\r\n        margin-top: 0.8rem;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default PaintingStyled;\r\n","import React from 'react';\r\n\r\nimport { ContentTypes } from '~/schema/types';\r\n\r\nimport PaintingStyled from './painting.styled';\r\nimport Image from '../image';\r\n\r\nconst Painting = (props: {\r\n  image: ContentTypes.Image;\r\n  title: string;\r\n  url: string;\r\n}) => {\r\n  if (!props.image) return null;\r\n  return (\r\n    <PaintingStyled to={props.url}>\r\n      <div className=\"image-wrap\">\r\n        <Image {...props.image} />\r\n      </div>\r\n      <div className=\"title\">{props.title}</div>\r\n    </PaintingStyled>\r\n  );\r\n};\r\n\r\nexport default Painting;\r\n","import Painting from './painting.component';\r\nexport default Painting;\r\n","import styled, { css } from 'styled-components';\r\nimport { spacer } from '~/theme/patterns';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst PageHeaderStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      title: theme?.typeStyles?.h1,\r\n    };\r\n\r\n    validateProps('PageHeaderStyled', { ...props });\r\n\r\n    return css`\r\n      .title {\r\n        ${props.title};\r\n      }\r\n      .content {\r\n        ${spacer('medium')}\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default PageHeaderStyled;\r\n","import PageHeader from './pageHeader.component';\r\nexport default PageHeader;\r\n","import React from 'react';\r\nimport { Container } from '../layout';\r\nimport Markup from '../markup';\r\n\r\nimport PageHeaderStyled from './pageHeader.styled';\r\n\r\nconst PageHeader = (props: { content?: string; title: string }) => {\r\n  return (\r\n    <PageHeaderStyled>\r\n      <Container narrow>\r\n        <h1 className=\"title\">{props.title}</h1>\r\n        {props.content && <Markup className=\"content\" html={props.content} />}\r\n      </Container>\r\n    </PageHeaderStyled>\r\n  );\r\n};\r\n\r\nexport default PageHeader;\r\n","import styled, { css } from 'styled-components';\r\nimport { spacer } from '~/theme/patterns';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst GalleryStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('GalleryStyled', { ...props });\r\n\r\n    return css`\r\n      ${spacer('large', 'padding-top-bottom')}\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default GalleryStyled;\r\n","import Gallery from './gallery.view';\r\nexport default Gallery;\r\n","import React from 'react';\nimport { ContentTypes } from '~/schema/types';\nimport PageHeader from '~/components/pageHeader';\nimport { Container, FlexGrid, Spacer } from '~/components/layout';\nimport Painting from '~/components/painting';\nimport GalleryStyled from './gallery.styled';\nimport Meta from '~/components/meta';\n\nexport default (props: { pageContext: ContentTypes.Gallery }) => {\n  const { content, paintings, title } = props.pageContext;\n\n  return (\n    <>\n      <Meta description={content} title={title} />\n      <GalleryStyled>\n        <PageHeader title={title} content={content} />\n\n        <Spacer size=\"large\">\n          <Container>\n            <FlexGrid\n              columns={{ xsmall: 2, mlarge: 4 }}\n              gutter={{ base: '0.8rem', xsmall: '1.6rem' }}\n            >\n              {paintings &&\n                paintings.map((painting: ContentTypes.Painting) => (\n                  <Painting\n                    key={painting.id}\n                    image={painting.image}\n                    title={painting.title}\n                    url={painting.url}\n                  />\n                ))}\n            </FlexGrid>\n          </Container>\n        </Spacer>\n      </GalleryStyled>\n    </>\n  );\n};\n","import styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst ImageStyled = styled.picture<{\r\n  theme?: object;\r\n}>`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('ImageStyled', { ...props });\r\n\r\n    return css``;\r\n  }}\r\n`;\r\n\r\nexport default ImageStyled;\r\n","import React from 'react';\r\n\r\nimport { ContentTypes } from '~/schema/types';\r\n\r\nimport ImageStyled from './image.styled';\r\n\r\nconst Image = (props: ContentTypes.Image) => {\r\n  return (\r\n    <ImageStyled>\r\n      <source type=\"image/webp\" srcSet={props.url_webp} />\r\n      <source type=\"image/jpeg\" srcSet={props.url_jpg} />\r\n      <img\r\n        src={props.url_jpg}\r\n        alt={props.altText}\r\n        width={props.width}\r\n        height={props.height}\r\n      />\r\n    </ImageStyled>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import Image from './image.component';\r\nexport default Image;\r\n","import styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst MarkupStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      h1Styles: theme?.typeStyles?.h1,\r\n      h2Styles: theme?.typeStyles?.h2,\r\n      h3Styles: theme?.typeStyles?.h3,\r\n      h4Styles: theme?.typeStyles?.h4,\r\n      h5Styles: theme?.typeStyles?.h5,\r\n      h6Styles: theme?.typeStyles?.h6,\r\n      //pStyles: theme?.typeStyles?.p,\r\n      linkColor: theme?.color?.link?.base,\r\n      linkHoverColor: theme?.color?.link?.hover,\r\n    };\r\n\r\n    validateProps('MarkupStyled', { ...props });\r\n\r\n    return css`\r\n      > * {\r\n        margin: 2.4rem 0 0 0;\r\n      }\r\n\r\n      > *:first-child {\r\n        margin-top: 0;\r\n      }\r\n\r\n      h1 {\r\n        ${props.h1Styles}\r\n      }\r\n      h2 {\r\n        ${props.h2Styles}\r\n      }\r\n      h3 {\r\n        ${props.h3Styles}\r\n      }\r\n      h4 {\r\n        ${props.h4Styles}\r\n      }\r\n      h5 {\r\n        ${props.h5Styles}\r\n      }\r\n      h6 {\r\n        ${props.h6Styles}\r\n      }\r\n\r\n      ul,\r\n      ol {\r\n        padding: 0;\r\n        list-style-position: inside;\r\n\r\n        ul,\r\n        ol {\r\n          padding-left: 3.2rem;\r\n        }\r\n      }\r\n\r\n      li {\r\n        margin-top: 0.8rem;\r\n      }\r\n\r\n      a {\r\n        color: ${props.linkColor};\r\n\r\n        &:hover {\r\n          color: ${props.linkHoverColor};\r\n        }\r\n      }\r\n\r\n      .table-wrap {\r\n        width: 100%;\r\n        overflow: auto;\r\n      }\r\n\r\n      table {\r\n        width: 100% !important;\r\n        border: none;\r\n        border-right: 1px solid #e6e7e8;\r\n        border-left: 1px solid #e6e7e8;\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n        text-align: left;\r\n\r\n        > caption {\r\n          ${props.h3Styles}\r\n          padding-bottom: 1.6rem;\r\n          text-align: left;\r\n        }\r\n      }\r\n\r\n      thead,\r\n      tfoot {\r\n        background: #e6e7e8;\r\n      }\r\n\r\n      tbody {\r\n        width: 100% !important;\r\n      }\r\n\r\n      tr {\r\n        height: auto !important;\r\n        border-bottom: 1px solid #e6e7e8;\r\n      }\r\n\r\n      td {\r\n        padding: 0.8rem 1.6rem;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default MarkupStyled;\r\n","import React from 'react';\r\n\r\nimport MarkupStyled from './markup.styled';\r\n\r\nconst Markup = (props: { className?: string; html: string }) => {\r\n  if (!props.html) return null;\r\n\r\n  return (\r\n    <MarkupStyled\r\n      className={props.className}\r\n      dangerouslySetInnerHTML={{\r\n        __html: props.html,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Markup;\r\n","import Markup from './markup.component';\r\nexport default Markup;\r\n"],"sourceRoot":""}