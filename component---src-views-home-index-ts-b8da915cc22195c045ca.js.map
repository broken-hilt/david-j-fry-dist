{"version":3,"sources":["webpack:///./src/components/painting/painting.styled.tsx","webpack:///./src/components/painting/painting.component.tsx","webpack:///./src/components/painting/index.ts","webpack:///./src/components/button/button.styled.tsx","webpack:///./src/components/button/index.ts","webpack:///./src/components/button/button.component.tsx","webpack:///./src/components/intro/intro.styled.tsx","webpack:///./src/components/intro/index.ts","webpack:///./src/components/intro/intro.component.tsx","webpack:///./src/components/latest/latest.styled.tsx","webpack:///./src/components/latest/index.ts","webpack:///./src/components/latest/latest.component.tsx","webpack:///./src/views/home/home.view.tsx","webpack:///./src/views/home/index.ts","webpack:///./src/components/image/image.styled.tsx","webpack:///./src/components/image/image.component.tsx","webpack:///./src/components/image/index.ts","webpack:///./src/components/markup/markup.styled.tsx","webpack:///./src/components/markup/markup.component.tsx","webpack:///./src/components/markup/index.tsx"],"names":["PaintingStyled","styled","Link","validateProps","css","withPrefix","Painting","props","image","PaintingSchema","name","title","url_webp","artMedium","medium","contentLocation","location","schema","to","url","className","ButtonStyled","theme","backgroundColor","button","textColor","Button","label","IntroStyled","div","titleStyles","typeStyles","h2","mq","xsmall","smedium","large","Intro","html","content","content_page_schema","paintings","path","LatestStyled","spacer","Latest","size","columns","mlarge","gutter","base","map","painting","key","id","Home","pageContext","latest","HomeView","ImageStyled","picture","Image","ImageSchema","contentUrl","description","altText","type","srcSet","url_jpg","src","alt","width","height","MarkupStyled","h1Styles","h1","h2Styles","h3Styles","h3","h4Styles","h4","h5Styles","h5","h6Styles","h6","linkColor","color","link","linkHoverColor","hover","Markup","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-views-home-index-ts-b8da915cc22195c045ca.js","sourcesContent":["import { Link, withPrefix } from 'gatsby';\r\nimport styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst PaintingStyled = styled(Link)`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('PaintingStyled', { ...props });\r\n\r\n    return css`\r\n      display: block;\r\n      padding: 1.6rem 1.6rem 3.2rem;\r\n      background: #fff;\r\n      text-decoration: none;\r\n      box-shadow: 0 0.4rem 4rem rgb(0 0 0 / 20%);\r\n      border-radius: 0.8rem;\r\n      text-align: right;\r\n      color: #222;\r\n      height: 100%;\r\n      position: relative;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n\r\n      .image-wrap {\r\n        position: relative;\r\n        font-size: 0;\r\n        line-height: 0;\r\n        overflow: hidden;\r\n\r\n        &::before {\r\n          content: '';\r\n          position: absolute;\r\n          top: 0;\r\n          bottom: 0;\r\n          left: 0;\r\n          right: 0;\r\n          background: rgba(0, 0, 0, 0.15);\r\n          opacity: 0;\r\n          z-index: 2;\r\n          transition: all 0.5s ease-in-out;\r\n        }\r\n\r\n        &::after {\r\n          content: '';\r\n          position: absolute;\r\n          top: 50%;\r\n          left: 50%;\r\n          width: 40px;\r\n          height: 40px;\r\n          background-color: rgba(0, 0, 0, 0.5);\r\n          background-image: url(${withPrefix('/images/visibility.svg')});\r\n          background-size: 32px 32px;\r\n          background-position: center center;\r\n          background-repeat: no-repeat;\r\n          opacity: 0;\r\n          z-index: 3;\r\n          transition: all 0.5s ease-in-out;\r\n          transform: translate(-50%, -50%) scale(0.9);\r\n          border-radius: 50%;\r\n        }\r\n      }\r\n\r\n      img {\r\n        transition: all 0.5s ease-in-out;\r\n        transform: scale(1);\r\n      }\r\n\r\n      &:hover {\r\n        box-shadow: 0 0.4rem 4rem rgb(0 0 0 / 35%);\r\n\r\n        .image-wrap {\r\n          &::before {\r\n            opacity: 1;\r\n          }\r\n          &::after {\r\n            opacity: 1;\r\n            transform: translate(-50%, -50%) scale(1);\r\n          }\r\n        }\r\n        // img {\r\n        //   transform: scale(1.025);\r\n        // }\r\n      }\r\n\r\n      .title {\r\n        font-weight: bold;\r\n        margin-top: 0.8rem;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default PaintingStyled;\r\n","import React from 'react';\r\n\r\nimport { ContentTypes } from '~/schema/types';\r\n\r\nimport PaintingStyled from './painting.styled';\r\nimport Image from '../image';\r\nimport SchemaOrg from '../schemaOrg';\r\nimport { SchemaOrgTypes } from '../schemaOrg/schemaOrg.types';\r\n\r\nconst Painting = (props: {\r\n  image: ContentTypes.Image;\r\n  location: string;\r\n  medium: string;\r\n  title: string;\r\n  url: string;\r\n}) => {\r\n  if (!props.image) return null;\r\n\r\n  const PaintingSchema: SchemaOrgTypes.Schema_Painting = {\r\n    '@type': 'Painting',\r\n    name: props.title,\r\n    image: props.image.url_webp,\r\n    artMedium: props.medium,\r\n    contentLocation: props.location,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SchemaOrg schema={PaintingSchema} />\r\n      <PaintingStyled to={props.url}>\r\n        <div className=\"image-wrap\">\r\n          <Image {...props.image} />\r\n        </div>\r\n        <div className=\"title\">{props.title}</div>\r\n      </PaintingStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Painting;\r\n","import Painting from './painting.component';\r\nexport default Painting;\r\n","import { Link } from 'gatsby';\r\nimport styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst ButtonStyled = styled(Link)<{\r\n  to: string;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      backgroundColor: theme?.button?.backgroundColor,\r\n      textColor: theme?.button?.textColor,\r\n    };\r\n\r\n    validateProps('ButtonStyled', { ...props });\r\n\r\n    return css`\r\n      position: relative;\r\n      display: inline-block;\r\n      padding: 0.8rem 4rem 0.8rem 2.4rem;\r\n      background: ${props.backgroundColor};\r\n      color: ${props.textColor};\r\n      text-transform: uppercase;\r\n      text-decoration: none;\r\n      opacity: 1;\r\n      transition: opacity 400ms ease-out;\r\n      border-radius: 2rem;\r\n      box-shadow: 1px 1px 6px rgba(0, 0, 0, 0.4);\r\n\r\n      &::after {\r\n        content: '';\r\n        position: absolute;\r\n        transform: rotate(45deg) translateY(-50%);\r\n        border: 0.2rem solid;\r\n        border-left: none;\r\n        border-bottom: none;\r\n        width: 0.8rem;\r\n        height: 0.8rem;\r\n        top: 50%;\r\n        right: 2.4rem;\r\n        transition: right 400ms;\r\n      }\r\n\r\n      &:hover {\r\n        opacity: 0.8;\r\n        color: ${props.textColor};\r\n\r\n        &::after {\r\n          right: 1.6rem;\r\n        }\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default ButtonStyled;\r\n","import Button from './button.component';\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport ButtonStyled from './button.styled';\r\n\r\nconst Button = (props: { className?: string; label: string; url: string }) => {\r\n  return (\r\n    <ButtonStyled className={props.className} to={props.url}>\r\n      {props.label}\r\n    </ButtonStyled>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import styled, { css } from 'styled-components';\r\nimport validateProps from '~/utils/validateProps';\r\nimport { mq } from '~/theme/patterns';\r\n\r\nconst IntroStyled = styled.div`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      titleStyles: theme?.typeStyles?.h2,\r\n    };\r\n\r\n    validateProps('IntroStyled', { ...props });\r\n\r\n    return css`\r\n      max-width: 60rem;\r\n      margin: auto;\r\n      @media ${mq.medium} {\r\n        max-width: 100%;\r\n      }\r\n\r\n      .image {\r\n        img {\r\n          display: block;\r\n          width: 100%;\r\n        }\r\n\r\n        &__inner {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      .content {\r\n        position: relative;\r\n        z-index: 2;\r\n        margin-top: -6.4rem;\r\n        padding: 0 1.6rem;\r\n\r\n        @media ${mq.xsmall} {\r\n          margin-top: -12rem;\r\n        }\r\n\r\n        @media ${mq.smedium} {\r\n          margin-top: -16rem;\r\n        }\r\n\r\n        &__inner {\r\n          width: 100%;\r\n          padding: 2.4rem 1.6rem;\r\n          background-color: #fff;\r\n          border-radius: 0.8rem;\r\n          box-shadow: 0 0.4rem 4rem rgb(0 0 0 / 20%);\r\n\r\n          @media ${mq.smedium} {\r\n            padding: 3.2rem;\r\n          }\r\n\r\n          @media ${mq.medium} {\r\n            padding: 6.4rem;\r\n          }\r\n\r\n          @media ${mq.large} {\r\n            padding: 6.4rem 10.4rem;\r\n          }\r\n        }\r\n      }\r\n\r\n      .title {\r\n        ${props.titleStyles}\r\n      }\r\n\r\n      .markup {\r\n        margin-top: 2.4rem;\r\n      }\r\n\r\n      .cta {\r\n        display: inline-block;\r\n        margin-top: 3.2rem;\r\n        text-decoration: none;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n      }\r\n\r\n      @media ${mq.medium} {\r\n        .inner {\r\n          margin-left: -${100 / 12}%;\r\n          margin-right: -${100 / 12}%;\r\n          display: flex;\r\n        }\r\n\r\n        .image {\r\n          flex-basis: 50%;\r\n          margin-top: 5.6rem;\r\n\r\n          &__inner {\r\n            margin-left: ${100 / 7}%;\r\n          }\r\n        }\r\n\r\n        .content {\r\n          margin-top: 0;\r\n          flex-basis: 50%;\r\n          padding: 0;\r\n\r\n          &__inner {\r\n            margin-left: -${100 / 7}%;\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default IntroStyled;\r\n","import Intro from './intro.component';\r\nexport default Intro;\r\n","import React from 'react';\r\n\r\nimport Button from '../button';\r\nimport { Container } from '~/components/layout';\r\n\r\nimport IntroStyled from './intro.styled';\r\nimport { ContentTypes } from '~/schema/types';\r\nimport Markup from '../markup';\r\nimport { content_page_schema } from '~/schema/site.schema';\r\nimport Image from '../image';\r\n\r\nconst Intro = (props: {\r\n  content: string;\r\n  image: ContentTypes.Image;\r\n  title: string;\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <IntroStyled>\r\n        <div className=\"inner\">\r\n          <div className=\"image\">\r\n            <div className=\"image__inner\">\r\n              <Image {...props.image} />\r\n            </div>\r\n          </div>\r\n          <div className=\"content\">\r\n            <div className=\"content__inner\">\r\n              <h2 className=\"title\">{props.title}</h2>\r\n              <Markup className=\"markup\" html={props.content} />\r\n              <Button\r\n                className=\"cta\"\r\n                url={content_page_schema.paintings.path}\r\n                label={`Go to paintings & prints gallery`}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </IntroStyled>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Intro;\r\n","import styled, { css } from 'styled-components';\r\nimport { spacer } from '~/theme/patterns';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst LatestStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      titleStyles: theme?.typeStyles?.h2,\r\n    };\r\n\r\n    validateProps('LatestStyled', { ...props });\r\n\r\n    return css`\r\n      background-color: #333;\r\n      ${spacer('large', 'padding-top-bottom')}\r\n\r\n      .latest-title {\r\n        ${props.titleStyles}\r\n        color: #fff;\r\n        text-align: center;\r\n      }\r\n\r\n      .cta {\r\n        ${spacer('medium')}\r\n        text-align: center;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default LatestStyled;\r\n","import Latest from './latest.component';\r\nexport default Latest;\r\n","import React from 'react';\r\n\r\nimport Button from '../button';\r\nimport { Container, FlexGrid, Spacer } from '../layout';\r\nimport Painting from '../painting';\r\n\r\nimport LatestStyled from './latest.styled';\r\n\r\nimport { content_page_schema } from '~/schema/site.schema';\r\nimport { ContentTypes } from '~/schema/types';\r\n\r\nconst Latest = (props: { paintings: ContentTypes.Painting[] }) => {\r\n  return (\r\n    <LatestStyled>\r\n      <Container>\r\n        <h2 className=\"latest-title\">Latest Paintings</h2>\r\n        <Spacer size=\"medium\">\r\n          <FlexGrid\r\n            columns={{ xsmall: 2, mlarge: 4 }}\r\n            gutter={{ base: '0.8rem', xsmall: '1.6rem' }}\r\n          >\r\n            {props.paintings &&\r\n              props.paintings.map((painting: ContentTypes.Painting) => (\r\n                <Painting\r\n                  key={painting.id}\r\n                  image={painting.image}\r\n                  location={painting.location}\r\n                  medium={painting.medium}\r\n                  title={painting.title}\r\n                  url={`paintings/${painting.url}`}\r\n                />\r\n              ))}\r\n          </FlexGrid>\r\n        </Spacer>\r\n        <div className=\"cta\">\r\n          <Button\r\n            label=\"View all paintings and prints\"\r\n            url={content_page_schema.paintings.path}\r\n          />\r\n        </div>\r\n      </Container>\r\n    </LatestStyled>\r\n  );\r\n};\r\n\r\nexport default Latest;\r\n","import React from 'react';\r\n\r\nimport Intro from '~/components/intro';\r\nimport { Spacer } from '~/components/layout';\r\n\r\nimport Latest from '~/components/latest';\r\nimport { ContentTypes } from '~/schema/types';\r\n\r\nconst Home = (props: { pageContext: ContentTypes.Home }) => {\r\n  const { content, image, latest, title } = props.pageContext;\r\n\r\n  return (\r\n    <>\r\n      <Spacer size=\"large\">\r\n        <Intro content={content} image={image} title={title} />\r\n      </Spacer>\r\n      <Spacer size=\"large\">\r\n        <Latest paintings={latest} />\r\n      </Spacer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import HomeView from './home.view';\r\nexport default HomeView;\r\n","import styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst ImageStyled = styled.picture<{\r\n  theme?: object;\r\n}>`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('ImageStyled', { ...props });\r\n\r\n    return css``;\r\n  }}\r\n`;\r\n\r\nexport default ImageStyled;\r\n","import React from 'react';\r\n\r\nimport { ContentTypes } from '~/schema/types';\r\nimport SchemaOrg from '../schemaOrg';\r\nimport { SchemaOrgTypes } from '../schemaOrg/schemaOrg.types';\r\n\r\nimport ImageStyled from './image.styled';\r\n\r\nconst Image = (props: ContentTypes.Image) => {\r\n  const ImageSchema: SchemaOrgTypes.Schema_Image = {\r\n    '@type': 'ImageObject',\r\n    contentUrl: props.url_webp,\r\n    description: props.altText,\r\n    name: props.title || props.altText,\r\n  };\r\n\r\n  if (props.location) ImageSchema.contentLocation = props.location;\r\n\r\n  return (\r\n    <>\r\n      <SchemaOrg schema={ImageSchema} />\r\n      <ImageStyled>\r\n        <source type=\"image/webp\" srcSet={props.url_webp} />\r\n        <source type=\"image/jpeg\" srcSet={props.url_jpg} />\r\n        <img\r\n          src={props.url_jpg}\r\n          alt={props.altText}\r\n          width={props.width}\r\n          height={props.height}\r\n        />\r\n      </ImageStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import Image from './image.component';\r\nexport default Image;\r\n","import styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst MarkupStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      h1Styles: theme?.typeStyles?.h1,\r\n      h2Styles: theme?.typeStyles?.h2,\r\n      h3Styles: theme?.typeStyles?.h3,\r\n      h4Styles: theme?.typeStyles?.h4,\r\n      h5Styles: theme?.typeStyles?.h5,\r\n      h6Styles: theme?.typeStyles?.h6,\r\n      //pStyles: theme?.typeStyles?.p,\r\n      linkColor: theme?.color?.link?.base,\r\n      linkHoverColor: theme?.color?.link?.hover,\r\n    };\r\n\r\n    validateProps('MarkupStyled', { ...props });\r\n\r\n    return css`\r\n      > * {\r\n        margin: 2.4rem 0 0 0;\r\n      }\r\n\r\n      > *:first-child {\r\n        margin-top: 0;\r\n      }\r\n\r\n      h1 {\r\n        ${props.h1Styles}\r\n      }\r\n      h2 {\r\n        ${props.h2Styles}\r\n      }\r\n      h3 {\r\n        ${props.h3Styles}\r\n      }\r\n      h4 {\r\n        ${props.h4Styles}\r\n      }\r\n      h5 {\r\n        ${props.h5Styles}\r\n      }\r\n      h6 {\r\n        ${props.h6Styles}\r\n      }\r\n\r\n      ul,\r\n      ol {\r\n        padding: 0;\r\n        list-style-position: inside;\r\n\r\n        ul,\r\n        ol {\r\n          padding-left: 3.2rem;\r\n        }\r\n      }\r\n\r\n      li {\r\n        margin-top: 0.8rem;\r\n      }\r\n\r\n      a {\r\n        color: ${props.linkColor};\r\n\r\n        &:hover {\r\n          color: ${props.linkHoverColor};\r\n        }\r\n      }\r\n\r\n      .table-wrap {\r\n        width: 100%;\r\n        overflow: auto;\r\n      }\r\n\r\n      table {\r\n        width: 100% !important;\r\n        border: none;\r\n        border-right: 1px solid #e6e7e8;\r\n        border-left: 1px solid #e6e7e8;\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n        text-align: left;\r\n\r\n        > caption {\r\n          ${props.h3Styles}\r\n          padding-bottom: 1.6rem;\r\n          text-align: left;\r\n        }\r\n      }\r\n\r\n      thead,\r\n      tfoot {\r\n        background: #e6e7e8;\r\n      }\r\n\r\n      tbody {\r\n        width: 100% !important;\r\n      }\r\n\r\n      tr {\r\n        height: auto !important;\r\n        border-bottom: 1px solid #e6e7e8;\r\n      }\r\n\r\n      td {\r\n        padding: 0.8rem 1.6rem;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default MarkupStyled;\r\n","import React from 'react';\r\n\r\nimport MarkupStyled from './markup.styled';\r\n\r\nconst Markup = (props: { className?: string; html: string }) => {\r\n  if (!props.html) return null;\r\n\r\n  return (\r\n    <MarkupStyled\r\n      className={props.className}\r\n      dangerouslySetInnerHTML={{\r\n        __html: props.html,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Markup;\r\n","import Markup from './markup.component';\r\nexport default Markup;\r\n"],"sourceRoot":""}