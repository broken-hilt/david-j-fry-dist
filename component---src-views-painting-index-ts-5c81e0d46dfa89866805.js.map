{"version":3,"sources":["webpack:///./src/components/paypal/paypal.styled.tsx","webpack:///./src/components/paypal/paypal.component.tsx","webpack:///./src/components/paypal/index.ts","webpack:///./src/views/painting/painting.styled.tsx","webpack:///./src/views/painting/painting.view.tsx","webpack:///./src/views/painting/index.ts","webpack:///./src/components/image/image.styled.tsx","webpack:///./src/components/image/image.component.tsx","webpack:///./src/components/image/index.ts","webpack:///./src/components/markup/markup.styled.tsx","webpack:///./src/components/markup/markup.component.tsx","webpack:///./src/components/markup/index.tsx"],"names":["PaypalStyled","styled","div","validateProps","css","mq","medium","Paypal","props","embedCode","dangerouslySetInnerHTML","__html","PaintingStyled","theme","title","typeStyles","h2","spacer","Painting","pageContext","description","image","location","paypalEmbedCode","referenceNumber","PaintingSchema","name","url_webp","artMedium","contentLocation","schema","columns","className","html","ImageStyled","picture","Image","ImageSchema","contentUrl","altText","type","srcSet","url_jpg","src","alt","width","height","MarkupStyled","h1Styles","h1","h2Styles","h3Styles","h3","h4Styles","h4","h5Styles","h5","h6Styles","h6","linkColor","color","link","base","linkHoverColor","hover","Markup"],"mappings":"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","file":"component---src-views-painting-index-ts-5c81e0d46dfa89866805.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst PaypalStyled = styled.div<{\n  theme?: object;\n}>`\n  ${() => {\n    const props = {};\n\n    validateProps('PaypalStyled', { ...props });\n\n    return css`\n      border-top: 1px solid #ddd;\n      margin-top: 2.4rem;\n      padding-top: 1.6rem;\n\n      table {\n        width: 100%;\n\n        tr:first-child {\n          display: none;\n        }\n      }\n\n      select {\n        width: 100%;\n        height: 4rem;\n        border: 1px solid #ddd;\n        max-width: 45rem;\n\n        @media ${mq.medium} {\n          max-width: 100%;\n        }\n      }\n\n      input[type='image'] {\n        margin-top: 1.6rem;\n      }\n\n      img {\n        width: 1px;\n      }\n    `;\n  }}\n`;\n\nexport default PaypalStyled;\n","import React from 'react';\n\nimport PaypalStyled from './paypal.styled';\n\nconst Paypal = (props: { embedCode?: string }) => {\n  if (!props.embedCode) return null;\n  return <PaypalStyled dangerouslySetInnerHTML={{ __html: props.embedCode }} />;\n};\n\nexport default Paypal;\n","import Paypal from './paypal.component';\nexport default Paypal;\n","import styled, { css } from 'styled-components';\nimport { spacer } from '~/theme/patterns';\nimport { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst PaintingStyled = styled.div<{\n  theme?: object;\n}>`\n  ${({ theme }) => {\n    const props = {\n      title: theme?.typeStyles?.h2,\n    };\n\n    validateProps('PaintingStyled', { ...props });\n\n    return css`\n      ${spacer('large', 'padding-top-bottom')}\n\n      text-align:center;\n\n      @media ${mq.medium} {\n        text-align: left;\n      }\n\n      .title {\n        ${props.title}\n\n        &.hide-mobile {\n          display: none;\n\n          @media ${mq.medium} {\n            display: block;\n          }\n        }\n\n        &.hide-desktop {\n          @media ${mq.medium} {\n            display: none;\n          }\n        }\n      }\n\n      .content {\n        margin-top: 1.6rem;\n      }\n\n      .image {\n        margin-top: 2.4rem;\n        margin-left: auto;\n        margin-right: auto;\n        max-width: 45rem;\n\n        @media ${mq.medium} {\n          margin-top: 0;\n        }\n      }\n    `;\n  }}\n`;\n\nexport default PaintingStyled;\n","import React from 'react';\nimport PaintingStyled from './painting.styled';\n\nimport { ContentTypes } from '~/schema/types';\nimport Markup from '~/components/markup';\nimport { Column, Container, Row } from '~/components/layout';\nimport Paypal from '~/components/paypal';\nimport Image from '~/components/image';\nimport SchemaOrg from '~/components/schemaOrg';\nimport { SchemaOrgTypes } from '~/components/schemaOrg/schemaOrg.types';\n\nconst Painting = (props: { pageContext: ContentTypes.Painting }) => {\n  const {\n    description,\n    image,\n    location,\n    medium,\n    paypalEmbedCode,\n    referenceNumber,\n    title,\n  } = props.pageContext;\n\n  const PaintingSchema: SchemaOrgTypes.Schema_Painting = {\n    '@type': 'Painting',\n    name: title,\n    image: image.url_webp,\n    artMedium: medium,\n    contentLocation: location,\n  };\n\n  return (\n    <>\n      <SchemaOrg schema={PaintingSchema} />\n      <PaintingStyled>\n        <Container>\n          <Row>\n            <Column columns={{ medium: 6 }}>\n              <h1 className=\"title hide-desktop\">\n                {title} - {referenceNumber}\n              </h1>\n              <div className=\"image\">\n                <Image {...image} />\n              </div>\n            </Column>\n            <Column columns={{ medium: 6 }}>\n              <h1 className=\"title hide-mobile\">\n                {title} - {referenceNumber}\n              </h1>\n              {description && <Markup className=\"content\" html={description} />}\n              <Paypal embedCode={paypalEmbedCode} />\n            </Column>\n          </Row>\n        </Container>\n      </PaintingStyled>\n    </>\n  );\n};\n\nexport default Painting;\n","import Painting from './painting.view';\nexport default Painting;\n","import styled, { css } from 'styled-components';\n// import { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst ImageStyled = styled.picture<{\n  theme?: object;\n}>`\n  ${() => {\n    const props = {};\n\n    validateProps('ImageStyled', { ...props });\n\n    return css``;\n  }}\n`;\n\nexport default ImageStyled;\n","import React from 'react';\n\nimport { ContentTypes } from '~/schema/types';\nimport SchemaOrg from '../schemaOrg';\nimport { SchemaOrgTypes } from '../schemaOrg/schemaOrg.types';\n\nimport ImageStyled from './image.styled';\n\nconst Image = (props: ContentTypes.Image) => {\n  const ImageSchema: SchemaOrgTypes.Schema_Image = {\n    '@type': 'ImageObject',\n    contentUrl: props.url_webp,\n    description: props.altText,\n    name: props.title || props.altText,\n  };\n\n  if (props.location) ImageSchema.contentLocation = props.location;\n\n  return (\n    <>\n      <SchemaOrg schema={ImageSchema} />\n      <ImageStyled>\n        <source type=\"image/webp\" srcSet={props.url_webp} />\n        <source type=\"image/jpeg\" srcSet={props.url_jpg} />\n        <img\n          src={props.url_jpg}\n          alt={props.altText}\n          width={props.width}\n          height={props.height}\n        />\n      </ImageStyled>\n    </>\n  );\n};\n\nexport default Image;\n","import Image from './image.component';\nexport default Image;\n","import styled, { css } from 'styled-components';\n// import { mq } from '~/theme/patterns';\nimport validateProps from '~/utils/validateProps';\n\nconst MarkupStyled = styled.div<{\n  theme?: object;\n}>`\n  ${({ theme }) => {\n    const props = {\n      h1Styles: theme?.typeStyles?.h1,\n      h2Styles: theme?.typeStyles?.h2,\n      h3Styles: theme?.typeStyles?.h3,\n      h4Styles: theme?.typeStyles?.h4,\n      h5Styles: theme?.typeStyles?.h5,\n      h6Styles: theme?.typeStyles?.h6,\n      //pStyles: theme?.typeStyles?.p,\n      linkColor: theme?.color?.link?.base,\n      linkHoverColor: theme?.color?.link?.hover,\n    };\n\n    validateProps('MarkupStyled', { ...props });\n\n    return css`\n      > * {\n        margin: 2.4rem 0 0 0;\n      }\n\n      > *:first-child {\n        margin-top: 0;\n      }\n\n      h1 {\n        ${props.h1Styles}\n      }\n      h2 {\n        ${props.h2Styles}\n      }\n      h3 {\n        ${props.h3Styles}\n      }\n      h4 {\n        ${props.h4Styles}\n      }\n      h5 {\n        ${props.h5Styles}\n      }\n      h6 {\n        ${props.h6Styles}\n      }\n\n      ul,\n      ol {\n        padding: 0;\n        list-style-position: inside;\n\n        ul,\n        ol {\n          padding-left: 3.2rem;\n        }\n      }\n\n      li {\n        margin-top: 0.8rem;\n      }\n\n      a {\n        color: ${props.linkColor};\n\n        &:hover {\n          color: ${props.linkHoverColor};\n        }\n      }\n\n      .table-wrap {\n        width: 100%;\n        overflow: auto;\n      }\n\n      table {\n        width: 100% !important;\n        border: none;\n        border-right: 1px solid #e6e7e8;\n        border-left: 1px solid #e6e7e8;\n        border-collapse: collapse;\n        border-spacing: 0;\n        text-align: left;\n\n        > caption {\n          ${props.h3Styles}\n          padding-bottom: 1.6rem;\n          text-align: left;\n        }\n      }\n\n      thead,\n      tfoot {\n        background: #e6e7e8;\n      }\n\n      tbody {\n        width: 100% !important;\n      }\n\n      tr {\n        height: auto !important;\n        border-bottom: 1px solid #e6e7e8;\n      }\n\n      td {\n        padding: 0.8rem 1.6rem;\n      }\n    `;\n  }}\n`;\n\nexport default MarkupStyled;\n","import React from 'react';\n\nimport MarkupStyled from './markup.styled';\n\nconst Markup = (props: { className?: string; html: string }) => {\n  if (!props.html) return null;\n\n  return (\n    <MarkupStyled\n      className={props.className}\n      dangerouslySetInnerHTML={{\n        __html: props.html,\n      }}\n    />\n  );\n};\n\nexport default Markup;\n","import Markup from './markup.component';\nexport default Markup;\n"],"sourceRoot":""}