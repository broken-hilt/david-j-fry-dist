{"version":3,"sources":["webpack:///./src/components/paypal/paypal.styled.tsx","webpack:///./src/components/paypal/paypal.component.tsx","webpack:///./src/components/paypal/index.ts","webpack:///./src/views/painting/painting.styled.tsx","webpack:///./src/views/painting/painting.view.tsx","webpack:///./src/views/painting/index.ts","webpack:///./src/components/image/image.styled.tsx","webpack:///./src/components/image/image.component.tsx","webpack:///./src/components/image/index.ts","webpack:///./src/components/markup/markup.styled.tsx","webpack:///./src/components/markup/markup.component.tsx","webpack:///./src/components/markup/index.tsx"],"names":["PaypalStyled","styled","div","validateProps","css","mq","medium","Paypal","props","embedCode","dangerouslySetInnerHTML","__html","PaintingStyled","theme","title","typeStyles","h2","spacer","Painting","pageContext","description","image","location","paypalEmbedCode","referenceNumber","PaintingSchema","name","url_webp","artMedium","contentLocation","schema","columns","className","html","ImageStyled","picture","Image","ImageSchema","contentUrl","altText","type","srcSet","url_jpg","src","alt","width","height","MarkupStyled","h1Styles","h1","h2Styles","h3Styles","h3","h4Styles","h4","h5Styles","h5","h6Styles","h6","linkColor","color","link","base","linkHoverColor","hover","Markup"],"mappings":"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","file":"component---src-views-painting-index-ts-5c81e0d46dfa89866805.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst PaypalStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('PaypalStyled', { ...props });\r\n\r\n    return css`\r\n      border-top: 1px solid #ddd;\r\n      margin-top: 2.4rem;\r\n      padding-top: 1.6rem;\r\n\r\n      table {\r\n        width: 100%;\r\n\r\n        tr:first-child {\r\n          display: none;\r\n        }\r\n      }\r\n\r\n      select {\r\n        width: 100%;\r\n        height: 4rem;\r\n        border: 1px solid #ddd;\r\n        max-width: 45rem;\r\n\r\n        @media ${mq.medium} {\r\n          max-width: 100%;\r\n        }\r\n      }\r\n\r\n      input[type='image'] {\r\n        margin-top: 1.6rem;\r\n      }\r\n\r\n      img {\r\n        width: 1px;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default PaypalStyled;\r\n","import React from 'react';\r\n\r\nimport PaypalStyled from './paypal.styled';\r\n\r\nconst Paypal = (props: { embedCode?: string }) => {\r\n  if (!props.embedCode) return null;\r\n  return <PaypalStyled dangerouslySetInnerHTML={{ __html: props.embedCode }} />;\r\n};\r\n\r\nexport default Paypal;\r\n","import Paypal from './paypal.component';\r\nexport default Paypal;\r\n","import styled, { css } from 'styled-components';\r\nimport { spacer } from '~/theme/patterns';\r\nimport { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst PaintingStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      title: theme?.typeStyles?.h2,\r\n    };\r\n\r\n    validateProps('PaintingStyled', { ...props });\r\n\r\n    return css`\r\n      ${spacer('large', 'padding-top-bottom')}\r\n\r\n      text-align:center;\r\n\r\n      @media ${mq.medium} {\r\n        text-align: left;\r\n      }\r\n\r\n      .title {\r\n        ${props.title}\r\n\r\n        &.hide-mobile {\r\n          display: none;\r\n\r\n          @media ${mq.medium} {\r\n            display: block;\r\n          }\r\n        }\r\n\r\n        &.hide-desktop {\r\n          @media ${mq.medium} {\r\n            display: none;\r\n          }\r\n        }\r\n      }\r\n\r\n      .content {\r\n        margin-top: 1.6rem;\r\n      }\r\n\r\n      .image {\r\n        margin-top: 2.4rem;\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n        max-width: 45rem;\r\n\r\n        @media ${mq.medium} {\r\n          margin-top: 0;\r\n        }\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default PaintingStyled;\r\n","import React from 'react';\r\nimport PaintingStyled from './painting.styled';\r\n\r\nimport { ContentTypes } from '~/schema/types';\r\nimport Markup from '~/components/markup';\r\nimport { Column, Container, Row } from '~/components/layout';\r\nimport Paypal from '~/components/paypal';\r\nimport Image from '~/components/image';\r\nimport SchemaOrg from '~/components/schemaOrg';\r\nimport { SchemaOrgTypes } from '~/components/schemaOrg/schemaOrg.types';\r\n\r\nconst Painting = (props: { pageContext: ContentTypes.Painting }) => {\r\n  const {\r\n    description,\r\n    image,\r\n    location,\r\n    medium,\r\n    paypalEmbedCode,\r\n    referenceNumber,\r\n    title,\r\n  } = props.pageContext;\r\n\r\n  const PaintingSchema: SchemaOrgTypes.Schema_Painting = {\r\n    '@type': 'Painting',\r\n    name: title,\r\n    image: image.url_webp,\r\n    artMedium: medium,\r\n    contentLocation: location,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SchemaOrg schema={PaintingSchema} />\r\n      <PaintingStyled>\r\n        <Container>\r\n          <Row>\r\n            <Column columns={{ medium: 6 }}>\r\n              <h1 className=\"title hide-desktop\">\r\n                {title} - {referenceNumber}\r\n              </h1>\r\n              <div className=\"image\">\r\n                <Image {...image} />\r\n              </div>\r\n            </Column>\r\n            <Column columns={{ medium: 6 }}>\r\n              <h1 className=\"title hide-mobile\">\r\n                {title} - {referenceNumber}\r\n              </h1>\r\n              {description && <Markup className=\"content\" html={description} />}\r\n              <Paypal embedCode={paypalEmbedCode} />\r\n            </Column>\r\n          </Row>\r\n        </Container>\r\n      </PaintingStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Painting;\r\n","import Painting from './painting.view';\r\nexport default Painting;\r\n","import styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst ImageStyled = styled.picture<{\r\n  theme?: object;\r\n}>`\r\n  ${() => {\r\n    const props = {};\r\n\r\n    validateProps('ImageStyled', { ...props });\r\n\r\n    return css``;\r\n  }}\r\n`;\r\n\r\nexport default ImageStyled;\r\n","import React from 'react';\r\n\r\nimport { ContentTypes } from '~/schema/types';\r\nimport SchemaOrg from '../schemaOrg';\r\nimport { SchemaOrgTypes } from '../schemaOrg/schemaOrg.types';\r\n\r\nimport ImageStyled from './image.styled';\r\n\r\nconst Image = (props: ContentTypes.Image) => {\r\n  const ImageSchema: SchemaOrgTypes.Schema_Image = {\r\n    '@type': 'ImageObject',\r\n    contentUrl: props.url_webp,\r\n    description: props.altText,\r\n    name: props.title || props.altText,\r\n  };\r\n\r\n  if (props.location) ImageSchema.contentLocation = props.location;\r\n\r\n  return (\r\n    <>\r\n      <SchemaOrg schema={ImageSchema} />\r\n      <ImageStyled>\r\n        <source type=\"image/webp\" srcSet={props.url_webp} />\r\n        <source type=\"image/jpeg\" srcSet={props.url_jpg} />\r\n        <img\r\n          src={props.url_jpg}\r\n          alt={props.altText}\r\n          width={props.width}\r\n          height={props.height}\r\n        />\r\n      </ImageStyled>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","import Image from './image.component';\r\nexport default Image;\r\n","import styled, { css } from 'styled-components';\r\n// import { mq } from '~/theme/patterns';\r\nimport validateProps from '~/utils/validateProps';\r\n\r\nconst MarkupStyled = styled.div<{\r\n  theme?: object;\r\n}>`\r\n  ${({ theme }) => {\r\n    const props = {\r\n      h1Styles: theme?.typeStyles?.h1,\r\n      h2Styles: theme?.typeStyles?.h2,\r\n      h3Styles: theme?.typeStyles?.h3,\r\n      h4Styles: theme?.typeStyles?.h4,\r\n      h5Styles: theme?.typeStyles?.h5,\r\n      h6Styles: theme?.typeStyles?.h6,\r\n      //pStyles: theme?.typeStyles?.p,\r\n      linkColor: theme?.color?.link?.base,\r\n      linkHoverColor: theme?.color?.link?.hover,\r\n    };\r\n\r\n    validateProps('MarkupStyled', { ...props });\r\n\r\n    return css`\r\n      > * {\r\n        margin: 2.4rem 0 0 0;\r\n      }\r\n\r\n      > *:first-child {\r\n        margin-top: 0;\r\n      }\r\n\r\n      h1 {\r\n        ${props.h1Styles}\r\n      }\r\n      h2 {\r\n        ${props.h2Styles}\r\n      }\r\n      h3 {\r\n        ${props.h3Styles}\r\n      }\r\n      h4 {\r\n        ${props.h4Styles}\r\n      }\r\n      h5 {\r\n        ${props.h5Styles}\r\n      }\r\n      h6 {\r\n        ${props.h6Styles}\r\n      }\r\n\r\n      ul,\r\n      ol {\r\n        padding: 0;\r\n        list-style-position: inside;\r\n\r\n        ul,\r\n        ol {\r\n          padding-left: 3.2rem;\r\n        }\r\n      }\r\n\r\n      li {\r\n        margin-top: 0.8rem;\r\n      }\r\n\r\n      a {\r\n        color: ${props.linkColor};\r\n\r\n        &:hover {\r\n          color: ${props.linkHoverColor};\r\n        }\r\n      }\r\n\r\n      .table-wrap {\r\n        width: 100%;\r\n        overflow: auto;\r\n      }\r\n\r\n      table {\r\n        width: 100% !important;\r\n        border: none;\r\n        border-right: 1px solid #e6e7e8;\r\n        border-left: 1px solid #e6e7e8;\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n        text-align: left;\r\n\r\n        > caption {\r\n          ${props.h3Styles}\r\n          padding-bottom: 1.6rem;\r\n          text-align: left;\r\n        }\r\n      }\r\n\r\n      thead,\r\n      tfoot {\r\n        background: #e6e7e8;\r\n      }\r\n\r\n      tbody {\r\n        width: 100% !important;\r\n      }\r\n\r\n      tr {\r\n        height: auto !important;\r\n        border-bottom: 1px solid #e6e7e8;\r\n      }\r\n\r\n      td {\r\n        padding: 0.8rem 1.6rem;\r\n      }\r\n    `;\r\n  }}\r\n`;\r\n\r\nexport default MarkupStyled;\r\n","import React from 'react';\r\n\r\nimport MarkupStyled from './markup.styled';\r\n\r\nconst Markup = (props: { className?: string; html: string }) => {\r\n  if (!props.html) return null;\r\n\r\n  return (\r\n    <MarkupStyled\r\n      className={props.className}\r\n      dangerouslySetInnerHTML={{\r\n        __html: props.html,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Markup;\r\n","import Markup from './markup.component';\r\nexport default Markup;\r\n"],"sourceRoot":""}